{
  "paths": [
    {
      "type": "file",
      "value": "index.md"
    }
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "# SX4\n\nDaemon for controlling a selectrix railroad (serial interface, RS232 or USB) via TCP/IP commands.\n\nIf a panel.xml file (generated by SX4Draw) is supplied, routes can be set via the LanbahnPanel\n(see LanbahnPanel and SX4Draw documentation)\n\nIf a GUI is activated via the \"-g\" option, JavaFX is needed (part of Java8-JRE, but must be\ninstalled separately if Java11 is used) - with this option (-g), automatic runs of trains can\nbe enabled (see SX4Draw documentation)\n\nmore info: https://opensx.net/sx4\n\n# USAGE\n\n    usage: SX4 [-b <arg>] [-d] [-h] [-s <arg>] [-t <arg>] [-v] [-r] [-g]\n\n    -b,--baudrate <arg>   Baudrate (only needed for SLX825), default=9600\n    -d,--debug            debug output on\n    -h,--help             show help\n    -s,--serial <arg>     Serial Device - default=ttyUSB0   (on windows use COM3 ..)\n    -t,--type <arg>       Interface Type (SLX825, FCC, SIM), default=SIM\n    -v,--version          program version and date\n    -r,--routing          enable routing\n    -g,--gui              GUI with timetables and trips (automatation)\n\n# EXAMPLES\n\n## FCC / ttyUSB0, debugging on\n\n    java -Djava.library.path=\"/usr/lib/jni/\" -jar dist/SX4.jar -s ttyUSB0 -t FCC -d\n\n## SLX825 / ttyUSB0, debugging on\n\n    java -Djava.library.path=\"/usr/lib/jni/\" -jar dist/SX4.jar -s ttyUSB0 -t SLX825 -b 9600 -d\n\n## Simulation only, debugging on\n\n    java -Djava.library.path=\"/usr/lib/jni/\" -jar dist/SX4.jar -t SIM -d\n\n# SXnet - ASCII tcp/ip (port 4104)\n\n## sx channel commands\n\nThe daemon listens to ASCII commands on port 4104, currently supported\n\n    S <c> <d>  - set an sx-channel <c> to value <d>  (\"S 44 12\" -> result \"OK\")\n    SX <c> <d> = same as S <c> <d>\n    R <c> - read a channel (\"R 44 -> result  would be \"X 44 12)\n\n## power on/off\n\n    SETPOWER 1  => track power on (SETPOWER 0 => track power off)\n    READPOWER  -> result \"XPOWER 1\" or \"XPOWER 0\"\n\n## single SX bit operations:\n\nTo support easy switching of turnouts (i.e. a single bit, not the complete byte of an SX channel/address), so can for example \"set bit 3 of channel 85\" with the command:\nSET 853 1 ('..0' is 'clear')\n\n    READ 853\n       response will be something like 'XL 853 1' (or ... 0)\n\n## more info:\n\nhttps://opensx.net/sx4\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n\n",
      "html": "<h1>SX4</h1>\n<p>Daemon for controlling a selectrix railroad (serial interface, RS232 or USB) via TCP/IP commands.</p>\n<p>If a panel.xml file (generated by SX4Draw) is supplied, routes can be set via the LanbahnPanel\n(see LanbahnPanel and SX4Draw documentation)</p>\n<p>If a GUI is activated via the “-g” option, JavaFX is needed (part of Java8-JRE, but must be\ninstalled separately if Java11 is used) - with this option (-g), automatic runs of trains can\nbe enabled (see SX4Draw documentation)</p>\n<p>more info: <a href=\"https://opensx.net/sx4\">https://opensx.net/sx4</a></p>\n<h1>USAGE</h1>\n<pre><code>usage: SX4 [-b &lt;arg&gt;] [-d] [-h] [-s &lt;arg&gt;] [-t &lt;arg&gt;] [-v] [-r] [-g]\n\n-b,--baudrate &lt;arg&gt;   Baudrate (only needed for SLX825), default=9600\n-d,--debug            debug output on\n-h,--help             show help\n-s,--serial &lt;arg&gt;     Serial Device - default=ttyUSB0   (on windows use COM3 ..)\n-t,--type &lt;arg&gt;       Interface Type (SLX825, FCC, SIM), default=SIM\n-v,--version          program version and date\n-r,--routing          enable routing\n-g,--gui              GUI with timetables and trips (automatation)\n</code></pre>\n<h1>EXAMPLES</h1>\n<h2>FCC / ttyUSB0, debugging on</h2>\n<pre><code>java -Djava.library.path=&quot;/usr/lib/jni/&quot; -jar dist/SX4.jar -s ttyUSB0 -t FCC -d\n</code></pre>\n<h2>SLX825 / ttyUSB0, debugging on</h2>\n<pre><code>java -Djava.library.path=&quot;/usr/lib/jni/&quot; -jar dist/SX4.jar -s ttyUSB0 -t SLX825 -b 9600 -d\n</code></pre>\n<h2>Simulation only, debugging on</h2>\n<pre><code>java -Djava.library.path=&quot;/usr/lib/jni/&quot; -jar dist/SX4.jar -t SIM -d\n</code></pre>\n<h1>SXnet - ASCII tcp/ip (port 4104)</h1>\n<h2>sx channel commands</h2>\n<p>The daemon listens to ASCII commands on port 4104, currently supported</p>\n<pre><code>S &lt;c&gt; &lt;d&gt;  - set an sx-channel &lt;c&gt; to value &lt;d&gt;  (&quot;S 44 12&quot; -&gt; result &quot;OK&quot;)\nSX &lt;c&gt; &lt;d&gt; = same as S &lt;c&gt; &lt;d&gt;\nR &lt;c&gt; - read a channel (&quot;R 44 -&gt; result  would be &quot;X 44 12)\n</code></pre>\n<h2>power on/off</h2>\n<pre><code>SETPOWER 1  =&gt; track power on (SETPOWER 0 =&gt; track power off)\nREADPOWER  -&gt; result &quot;XPOWER 1&quot; or &quot;XPOWER 0&quot;\n</code></pre>\n<h2>single SX bit operations:</h2>\n<p>To support easy switching of turnouts (i.e. a single bit, not the complete byte of an SX channel/address), so can for example “set bit 3 of channel 85” with the command:\nSET 853 1 (’…0’ is ‘clear’)</p>\n<pre><code>READ 853\n   response will be something like 'XL 853 1' (or ... 0)\n</code></pre>\n<h2>more info:</h2>\n<p><a href=\"https://opensx.net/sx4\">https://opensx.net/sx4</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 0
    }
  ]
}