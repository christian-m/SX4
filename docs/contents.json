{
  "paths": [
    {
      "type": "file",
      "value": "index.md"
    },
    {
      "type": "file",
      "value": "01-Einfuehrung.md"
    },
    {
      "type": "file",
      "value": "02-Optionen.md"
    },
    {
      "type": "file",
      "value": "02-usage.md"
    },
    {
      "type": "file",
      "value": "03-Hauptfenster.md"
    },
    {
      "type": "file",
      "value": "04-Fahrplan_Start.md"
    },
    {
      "type": "file",
      "value": "05-Zug_setzen.md"
    },
    {
      "type": "file",
      "value": "06-Zug_aendern.md"
    },
    {
      "type": "file",
      "value": "20-protocol.md"
    }
  ],
  "contents": [
    {
      "path": "index.md",
      "url": "index.html",
      "content": "# SX4 Fahrplan\n\nMehr allgemeine Info: https://opensx.net/sx4\n\n## Installation\n\nNach Download von *SX4.jar* von github, Verzeichnis \n\n    https://github.com/michael71/SX4/releases\n\nstarten mit \n    \n    java -jar SX4.jar  [Startoptionen...]\n\n(Java-8 oder Java-11 muss installiert sein)\n\n## Startoptionen\n\nsiehe: [Startoptionen](02-optionen.md)\nbzw englisch: [Usage](02-usage.md)\n\n## Handbuch Fahrplanbedienung\n\n* [Einführung](01-Einfuehrung.md)\n* [Hauptfenster](03-Hauptfenster.md)\n* [Fahrplan_Start](04-Fahrplan_Start.md)\n* [Zug setzen](05-Zug_setzen.md)\n* [Zug ändern](06-Zug_aendern.md)\n* ...\n* ...\n\n![](fahrplan1.png)\n\n## SXnet\n\n[SXnet ASCII Protocol](20-protocol.md)\n\n\n## Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n\n",
      "html": "<h1>SX4 Fahrplan</h1>\n<p>Mehr allgemeine Info: <a href=\"https://opensx.net/sx4\">https://opensx.net/sx4</a></p>\n<h2>Installation</h2>\n<p>Nach Download von <em>SX4.jar</em> von github, Verzeichnis</p>\n<pre><code>https://github.com/michael71/SX4/releases\n</code></pre>\n<p>starten mit</p>\n<pre><code>java -jar SX4.jar  [Startoptionen...]\n</code></pre>\n<p>(Java-8 oder Java-11 muss installiert sein)</p>\n<h2>Startoptionen</h2>\n<p>siehe: <a href=\"02-optionen.html\">Startoptionen</a>\nbzw englisch: <a href=\"02-usage.html\">Usage</a></p>\n<h2>Handbuch Fahrplanbedienung</h2>\n<ul>\n<li><a href=\"01-Einfuehrung.html\">Einführung</a></li>\n<li><a href=\"03-Hauptfenster.html\">Hauptfenster</a></li>\n<li><a href=\"04-Fahrplan_Start.html\">Fahrplan_Start</a></li>\n<li><a href=\"05-Zug_setzen.html\">Zug setzen</a></li>\n<li><a href=\"06-Zug_aendern.html\">Zug ändern</a></li>\n<li>…</li>\n<li>…</li>\n</ul>\n<p><img src=\"fahrplan1.png\" alt=\"\"></p>\n<h2>SXnet</h2>\n<p><a href=\"20-protocol.html\">SXnet ASCII Protocol</a></p>\n<h2>Licence</h2>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 0
    },
    {
      "path": "01-Einfuehrung.md",
      "url": "01-Einfuehrung.html",
      "content": "# SX4 (Core)\n\nDas SX4 Programm wird verwendet zur Steuerung einer Selectrix \nModellbahn über das Netzwerk (per TCP/IP ASCII KommandosModellbahn über das Netzwerk (per TCP/IP ASCII Kommandos, \n, \nsiehe [Protokoll](20_protocol.md)\n). Hierzu muss die \n\"Command Station\" per seriellem Interface mit dem PC verbunden sein (RS232 oder USB).\n\nDas SX4 Programm kann auch als Dämon gestartet werden ohne GUI (ohne Fahrplan).\n\nFalls ein panel.xml file im Startverzeichnis existiert \n(erzeugt durch [SX4Draw](https://michael71.github.io/SX4Draw)>SX4Draw), \nso können auch Fahrstraßen gestellt werden.\n(siehe auch die LanbahnPanel und SX4Draw Dokumentation)\n\nFalls darüberhinaus ein GUI aktiviert wird durch die \"-g\" Option, so kann auch\nein Fahrplan gestartet werden, der mehrere Zugfahrten nacheinander automatisch \nabarbeitet (für das GUI muss JavaFX installiert sein - dies ist in der Java-8-JRE\nenthalten, muss aber bei Verwendung von Java-11 separat installiert werden).\n\n![](fahrplan1.png)\n\nMehr allgemeine Info: https://opensx.net/sx4\n\nweiter zu *[Startoptionen](02_Optionen.md)*\n\nbzw englisch: [Usage](02_usage.md)\n\n\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n\n",
      "html": "<h1>SX4 (Core)</h1>\n<p>Das SX4 Programm wird verwendet zur Steuerung einer Selectrix\nModellbahn über das Netzwerk (per TCP/IP ASCII KommandosModellbahn über das Netzwerk (per TCP/IP ASCII Kommandos,\n,\nsiehe <a href=\"20_protocol.html\">Protokoll</a>\n). Hierzu muss die\n“Command Station” per seriellem Interface mit dem PC verbunden sein (RS232 oder USB).</p>\n<p>Das SX4 Programm kann auch als Dämon gestartet werden ohne GUI (ohne Fahrplan).</p>\n<p>Falls ein panel.xml file im Startverzeichnis existiert\n(erzeugt durch <a href=\"https://michael71.github.io/SX4Draw\">SX4Draw</a>&gt;SX4Draw),\nso können auch Fahrstraßen gestellt werden.\n(siehe auch die LanbahnPanel und SX4Draw Dokumentation)</p>\n<p>Falls darüberhinaus ein GUI aktiviert wird durch die “-g” Option, so kann auch\nein Fahrplan gestartet werden, der mehrere Zugfahrten nacheinander automatisch\nabarbeitet (für das GUI muss JavaFX installiert sein - dies ist in der Java-8-JRE\nenthalten, muss aber bei Verwendung von Java-11 separat installiert werden).</p>\n<p><img src=\"fahrplan1.png\" alt=\"\"></p>\n<p>Mehr allgemeine Info: <a href=\"https://opensx.net/sx4\">https://opensx.net/sx4</a></p>\n<p>weiter zu <em><a href=\"02_Optionen.html\">Startoptionen</a></em></p>\n<p>bzw englisch: <a href=\"02_usage.html\">Usage</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 1
    },
    {
      "path": "02-Optionen.md",
      "url": "02-Optionen.html",
      "content": "# SX4 Startoptionen\n\nMit den Startoptionen wird der Typ der Zentrale ausgewählt (Beispiele unten) \nund eine Betriebsart gewählt, also ob\n* mit oder ohne Fahrstraßen(\"routing\")\n* mit oder ohne Fahrplan-Fenster (\"graphical user interface\")\n\ngearbeitet werden soll.\n\nIm Einzelnen: (jeweils Kurzform, zum Beispiel \"-b\" und Langform \"--baudrate\")\n\n   \n    SX4 [-b <arg>] [-d] [-h] [-s <arg>] [-t <arg>] [-v] [-r] [-g]\n\n    -b,--baudrate <arg>   Baudrate (only needed for SLX825), default=9600\n\n    -d,--debug            debug output on\n\n    -h,--help             show help\n\n    -s,--serial <arg>     Serial Device - default=ttyUSB0   (on windows use COM3 ..)\n\n    -t,--type <arg>       Interface Type (SLX825, FCC, SIM), default=SIM\n\n    -v,--version          program version and date\n\n    -r,--routing          enable routing\n\n    -g,--gui              GUI with timetables and trips (automatation)\n\n\n# Beispiele\n\n## FCC / ttyUSB0, debugging on\n\n    java -jar SX4.jar -s ttyUSB0 -t FCC -d\n\n## SLX825 / ttyUSB0, debugging on\n\n    java -jar SX4.jar -s ttyUSB0 -t SLX825 -b 9600 -d\n\n## Simulation, debugging on\n\n    java -jar SX4.jar -t SIM -d\n\n\n\n![](sx4_loco2_core.png)\n\n\n",
      "html": "<h1>SX4 Startoptionen</h1>\n<p>Mit den Startoptionen wird der Typ der Zentrale ausgewählt (Beispiele unten)\nund eine Betriebsart gewählt, also ob</p>\n<ul>\n<li>mit oder ohne Fahrstraßen(“routing”)</li>\n<li>mit oder ohne Fahrplan-Fenster (“graphical user interface”)</li>\n</ul>\n<p>gearbeitet werden soll.</p>\n<p>Im Einzelnen: (jeweils Kurzform, zum Beispiel “-b” und Langform “–baudrate”)</p>\n<pre><code>SX4 [-b &lt;arg&gt;] [-d] [-h] [-s &lt;arg&gt;] [-t &lt;arg&gt;] [-v] [-r] [-g]\n\n-b,--baudrate &lt;arg&gt;   Baudrate (only needed for SLX825), default=9600\n\n-d,--debug            debug output on\n\n-h,--help             show help\n\n-s,--serial &lt;arg&gt;     Serial Device - default=ttyUSB0   (on windows use COM3 ..)\n\n-t,--type &lt;arg&gt;       Interface Type (SLX825, FCC, SIM), default=SIM\n\n-v,--version          program version and date\n\n-r,--routing          enable routing\n\n-g,--gui              GUI with timetables and trips (automatation)\n</code></pre>\n<h1>Beispiele</h1>\n<h2>FCC / ttyUSB0, debugging on</h2>\n<pre><code>java -jar SX4.jar -s ttyUSB0 -t FCC -d\n</code></pre>\n<h2>SLX825 / ttyUSB0, debugging on</h2>\n<pre><code>java -jar SX4.jar -s ttyUSB0 -t SLX825 -b 9600 -d\n</code></pre>\n<h2>Simulation, debugging on</h2>\n<pre><code>java -jar SX4.jar -t SIM -d\n</code></pre>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 2
    },
    {
      "path": "02-usage.md",
      "url": "02-usage.html",
      "content": "# SX4\n\nDaemon for controlling a selectrix railroad (serial interface, RS232 or USB) via TCP/IP commands.\n\nIf a panel.xml file (generated by SX4Draw) is supplied, routes can be set via the LanbahnPanel\n(see LanbahnPanel and SX4Draw documentation)\n\nIf a GUI is activated via the \"-g\" option, JavaFX is needed (part of Java8-JRE, but must be\ninstalled separately if Java11 is used) - with this option (-g), automatic runs of trains can\nbe enabled (see SX4Draw documentation)\n\nmore info: https://opensx.net/sx4\n\n# USAGE\n\n    usage: SX4 [-b <arg>] [-d] [-h] [-s <arg>] [-t <arg>] [-v] [-r] [-g]\n\n    -b,--baudrate <arg>   Baudrate (only needed for SLX825), default=9600\n    -d,--debug            debug output on\n    -h,--help             show help\n    -s,--serial <arg>     Serial Device - default=ttyUSB0   (on windows use COM3 ..)\n    -t,--type <arg>       Interface Type (SLX825, FCC, SIM), default=SIM\n    -v,--version          program version and date\n    -r,--routing          enable routing\n    -g,--gui              GUI with timetables and trips (automatation)\n\n# EXAMPLES\n\n## FCC / ttyUSB0, debugging on\n\n    java -Djava.library.path=\"/usr/lib/jni/\" -jar dist/SX4.jar -s ttyUSB0 -t FCC -d\n\n## SLX825 / ttyUSB0, debugging on\n\n    java -Djava.library.path=\"/usr/lib/jni/\" -jar dist/SX4.jar -s ttyUSB0 -t SLX825 -b 9600 -d\n\n## Simulation only, debugging on\n\n    java -Djava.library.path=\"/usr/lib/jni/\" -jar dist/SX4.jar -t SIM -d\n\n# SXnet - ASCII tcp/ip (port 4104)\n\n## sx channel commands\n\nThe daemon listens to ASCII commands on port 4104, currently supported\n\n    S <c> <d>  - set an sx-channel <c> to value <d>  (\"S 44 12\" -> result \"OK\")\n    SX <c> <d> = same as S <c> <d>\n    R <c> - read a channel (\"R 44 -> result  would be \"X 44 12)\n\n## power on/off\n\n    SETPOWER 1  => track power on (SETPOWER 0 => track power off)\n    READPOWER  -> result \"XPOWER 1\" or \"XPOWER 0\"\n\n## single SX bit operations:\n\nTo support easy switching of turnouts (i.e. a single bit, not the complete byte of an SX channel/address), so can for example \"set bit 3 of channel 85\" with the command:\nSET 853 1 ('..0' is 'clear')\n\n    READ 853\n       response will be something like 'XL 853 1' (or ... 0)\n\n## more info:\n\nhttps://opensx.net/sx4\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n\n",
      "html": "<h1>SX4</h1>\n<p>Daemon for controlling a selectrix railroad (serial interface, RS232 or USB) via TCP/IP commands.</p>\n<p>If a panel.xml file (generated by SX4Draw) is supplied, routes can be set via the LanbahnPanel\n(see LanbahnPanel and SX4Draw documentation)</p>\n<p>If a GUI is activated via the “-g” option, JavaFX is needed (part of Java8-JRE, but must be\ninstalled separately if Java11 is used) - with this option (-g), automatic runs of trains can\nbe enabled (see SX4Draw documentation)</p>\n<p>more info: <a href=\"https://opensx.net/sx4\">https://opensx.net/sx4</a></p>\n<h1>USAGE</h1>\n<pre><code>usage: SX4 [-b &lt;arg&gt;] [-d] [-h] [-s &lt;arg&gt;] [-t &lt;arg&gt;] [-v] [-r] [-g]\n\n-b,--baudrate &lt;arg&gt;   Baudrate (only needed for SLX825), default=9600\n-d,--debug            debug output on\n-h,--help             show help\n-s,--serial &lt;arg&gt;     Serial Device - default=ttyUSB0   (on windows use COM3 ..)\n-t,--type &lt;arg&gt;       Interface Type (SLX825, FCC, SIM), default=SIM\n-v,--version          program version and date\n-r,--routing          enable routing\n-g,--gui              GUI with timetables and trips (automatation)\n</code></pre>\n<h1>EXAMPLES</h1>\n<h2>FCC / ttyUSB0, debugging on</h2>\n<pre><code>java -Djava.library.path=&quot;/usr/lib/jni/&quot; -jar dist/SX4.jar -s ttyUSB0 -t FCC -d\n</code></pre>\n<h2>SLX825 / ttyUSB0, debugging on</h2>\n<pre><code>java -Djava.library.path=&quot;/usr/lib/jni/&quot; -jar dist/SX4.jar -s ttyUSB0 -t SLX825 -b 9600 -d\n</code></pre>\n<h2>Simulation only, debugging on</h2>\n<pre><code>java -Djava.library.path=&quot;/usr/lib/jni/&quot; -jar dist/SX4.jar -t SIM -d\n</code></pre>\n<h1>SXnet - ASCII tcp/ip (port 4104)</h1>\n<h2>sx channel commands</h2>\n<p>The daemon listens to ASCII commands on port 4104, currently supported</p>\n<pre><code>S &lt;c&gt; &lt;d&gt;  - set an sx-channel &lt;c&gt; to value &lt;d&gt;  (&quot;S 44 12&quot; -&gt; result &quot;OK&quot;)\nSX &lt;c&gt; &lt;d&gt; = same as S &lt;c&gt; &lt;d&gt;\nR &lt;c&gt; - read a channel (&quot;R 44 -&gt; result  would be &quot;X 44 12)\n</code></pre>\n<h2>power on/off</h2>\n<pre><code>SETPOWER 1  =&gt; track power on (SETPOWER 0 =&gt; track power off)\nREADPOWER  -&gt; result &quot;XPOWER 1&quot; or &quot;XPOWER 0&quot;\n</code></pre>\n<h2>single SX bit operations:</h2>\n<p>To support easy switching of turnouts (i.e. a single bit, not the complete byte of an SX channel/address), so can for example “set bit 3 of channel 85” with the command:\nSET 853 1 (’…0’ is ‘clear’)</p>\n<pre><code>READ 853\n   response will be something like 'XL 853 1' (or ... 0)\n</code></pre>\n<h2>more info:</h2>\n<p><a href=\"https://opensx.net/sx4\">https://opensx.net/sx4</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 3
    },
    {
      "path": "03-Hauptfenster.md",
      "url": "03-Hauptfenster.html",
      "content": "# Fahrplan-Fenster\n\n![](fahrplan1.png)\n\nVom Fahrplan-Fenster aus kann einer der Fahrpläne, die im Panel.XML File gespeichert\nsind, gestartet werden und auch gestoppt werden.\n\nDer entsprechende Fahrplan wird ausgewählt:\n\n![](fahrplan-select.png)\n\n\nweiter zu [Fahrplan Start](04-Fahrplan_Start.md)\n\nzurück zum [Index](index.md)\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n",
      "html": "<h1>Fahrplan-Fenster</h1>\n<p><img src=\"fahrplan1.png\" alt=\"\"></p>\n<p>Vom Fahrplan-Fenster aus kann einer der Fahrpläne, die im Panel.XML File gespeichert\nsind, gestartet werden und auch gestoppt werden.</p>\n<p>Der entsprechende Fahrplan wird ausgewählt:</p>\n<p><img src=\"fahrplan-select.png\" alt=\"\"></p>\n<p>weiter zu <a href=\"04-Fahrplan_Start.html\">Fahrplan Start</a></p>\n<p>zurück zum <a href=\"index.html\">Index</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 4
    },
    {
      "path": "04-Fahrplan_Start.md",
      "url": "04-Fahrplan_Start.html",
      "content": "# Fahrplan-Start\n\nVom Fahrplan-Fenster aus kann einer der Fahrpläne, die im Panel.XML File gespeichert\nsind, gestartet werden und auch gestoppt werden.\n\n![Gleissp./Start/Stop](power-start-stop.png)\n\nLinks neben dem Startbutton findet sich die Anzeige (rot/grün) für die Gleisspannung -\ndurch Click auf diese Anzeige kann die Gleisspannung ein- und ausgeschaltet werden.\n\nFalls die Gleisspannung nicht eingeschaltet ist, kann natürlich auch keine Lok gestartet\nwerden, in diesem Fall erscheint die Fehlermeldung\n\n![](alert-power-off.png)\n\nBeim Click auf Start wird außerdem gecheckt, ob die richtigen (im Fahrplan \nverwendeten Züge bzw Loks) auch auf dem richtigen Gleis (bzw Sensor) stehen, sonst erscheint\neine Fehlermeldung wie zum Beispiel:\n\n![](alert-wrong-train.png)\n\nFür den Beispiel-Fahrplan müssen zu Beginn diese Züge auf den richtigen \n\"Start-Sensoren\" stehen\n\n* *Zug 42 auf Sensor 923* (für Fahrt 3102)\n* *Zug 29 auf Sensor 902* (für Fahrt 3101) \n* *Zug 40 auf Sensor 922* (für Fahrt 3104) \n\nFalls die Positionen nicht stimmen, so kann das 2 Gründe haben:\n\n1. die Züge stehen wirklich nicht richtig\n2. die Positionen sind dem Programm noch nicht bekannt\n(oder beides)\n\nweiter zu [Zug-setzen](05-Zug_setzen.md)\n\nzurück zum [Index](index.md)\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n",
      "html": "<h1>Fahrplan-Start</h1>\n<p>Vom Fahrplan-Fenster aus kann einer der Fahrpläne, die im Panel.XML File gespeichert\nsind, gestartet werden und auch gestoppt werden.</p>\n<p><img src=\"power-start-stop.png\" alt=\"Gleissp./Start/Stop\"></p>\n<p>Links neben dem Startbutton findet sich die Anzeige (rot/grün) für die Gleisspannung -\ndurch Click auf diese Anzeige kann die Gleisspannung ein- und ausgeschaltet werden.</p>\n<p>Falls die Gleisspannung nicht eingeschaltet ist, kann natürlich auch keine Lok gestartet\nwerden, in diesem Fall erscheint die Fehlermeldung</p>\n<p><img src=\"alert-power-off.png\" alt=\"\"></p>\n<p>Beim Click auf Start wird außerdem gecheckt, ob die richtigen (im Fahrplan\nverwendeten Züge bzw Loks) auch auf dem richtigen Gleis (bzw Sensor) stehen, sonst erscheint\neine Fehlermeldung wie zum Beispiel:</p>\n<p><img src=\"alert-wrong-train.png\" alt=\"\"></p>\n<p>Für den Beispiel-Fahrplan müssen zu Beginn diese Züge auf den richtigen\n“Start-Sensoren” stehen</p>\n<ul>\n<li><em>Zug 42 auf Sensor 923</em> (für Fahrt 3102)</li>\n<li><em>Zug 29 auf Sensor 902</em> (für Fahrt 3101)</li>\n<li><em>Zug 40 auf Sensor 922</em> (für Fahrt 3104)</li>\n</ul>\n<p>Falls die Positionen nicht stimmen, so kann das 2 Gründe haben:</p>\n<ol>\n<li>die Züge stehen wirklich nicht richtig</li>\n<li>die Positionen sind dem Programm noch nicht bekannt\n(oder beides)</li>\n</ol>\n<p>weiter zu <a href=\"05-Zug_setzen.html\">Zug-setzen</a></p>\n<p>zurück zum <a href=\"index.html\">Index</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 5
    },
    {
      "path": "05-Zug_setzen.md",
      "url": "05-Zug_setzen.html",
      "content": "# Zug setzen (vs. Zug ändern)\n\n## richtiger Zug, aber dem Programm nicht bekannt\n\nWenn die richtigen (Start-)Züge auf den Fahrplan-Startgleisen stehen, so kann\ndies dem Programm mit dem Dialog \"Zug setzen\" bekannt gemacht werden, durch den \nentsprechenden Button oder durch rechten Mausclick auf eine Fahrt(-Zeile) und \nAuswahl von \"Zug setzen\", siehe\n\n![](set-train1.png)\n\n(hierbei wird der Start-Sensor automatisch ausgewählt)\n\nFalls man den Dialog auswählt, den man mit dem Button \"Zug setzen\" erhält, muss\nman zunächst noch den richtigen Sensor auswählen:\n\n![](sensor-train-set.png)\n\n## anderen Zug verwenden\n\nweiter zu [Zug-ändern](06-Zug_aendern.md)\n\nzurück zum [Index](index.md)\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n",
      "html": "<h1>Zug setzen (vs. Zug ändern)</h1>\n<h2>richtiger Zug, aber dem Programm nicht bekannt</h2>\n<p>Wenn die richtigen (Start-)Züge auf den Fahrplan-Startgleisen stehen, so kann\ndies dem Programm mit dem Dialog “Zug setzen” bekannt gemacht werden, durch den\nentsprechenden Button oder durch rechten Mausclick auf eine Fahrt(-Zeile) und\nAuswahl von “Zug setzen”, siehe</p>\n<p><img src=\"set-train1.png\" alt=\"\"></p>\n<p>(hierbei wird der Start-Sensor automatisch ausgewählt)</p>\n<p>Falls man den Dialog auswählt, den man mit dem Button “Zug setzen” erhält, muss\nman zunächst noch den richtigen Sensor auswählen:</p>\n<p><img src=\"sensor-train-set.png\" alt=\"\"></p>\n<h2>anderen Zug verwenden</h2>\n<p>weiter zu <a href=\"06-Zug_aendern.html\">Zug-ändern</a></p>\n<p>zurück zum <a href=\"index.html\">Index</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 6
    },
    {
      "path": "06-Zug_aendern.md",
      "url": "06-Zug_aendern.html",
      "content": "# Zug ändern\n\nTODO ...\n",
      "html": "<h1>Zug ändern</h1>\n<p>TODO …</p>\n",
      "id": 7
    },
    {
      "path": "20-protocol.md",
      "url": "20-protocol.html",
      "content": "# SX4 - ASCII Protocol\n\n## SXnet - Port\n\nEs wird Port 4104 verwendet (und TCP/IP)\n\n# Befehlsübersicht\n\n## reine SX Befehle\n\nÜber folgende ASCII Befehle werden SX-Bytes gesetzt und gelesen\n\n    S <c> <d>  - set an sx-channel <c> to value <d>  (\"S 44 12\" -> result \"OK\")\n    SX <c> <d> = same as S <c> <d>\n    R <c> - read a channel (\"R 44 -> result  would be \"X 44 12)\n\n    hierbei kann c die Werte von 1 bis 111 annehmen und d die Werte 0 bis 255 (8bit)\n\n## erweiterte, SX Bit Befehle\n\nUm unabhängig von der anderen Bits eines SX Kanals zB eine einzelne Weiche stellen \nzu können, gibt es die \"Bit-Befehle\" SET und GET, Beispiel:\n\n    SET 853 1 => Setze Bit 3 auf Adresse 85\n    SET 853 0 => Clear Bit 3 auf Adresse 85\n    (Bit sind hier die typischen SX-Bits, die von 1..8 numeriert sind)\n\n    READ 853  => gibt den Wert von Bit 3 auf Adresse 85 aus\n       response will be something like 'XL 853 1' (or ... 0)\n\n\n## Gleisspannungs Befehle Ein/AUS\n\n    SETPOWER 1  => track power on (SETPOWER 0 => track power off)\n    READPOWER   => lese den aktuellen \"Gleisspannungszustand\"\n                      Antwort:  \"XPOWER 1\" or \"XPOWER 0\"\n\n\nzurück zum [Index](index.md)\n\n# Licence\n\n[GPL v3.0](https://www.gnu.org/licenses/gpl-3.0.en.html)\n\n![](sx4_loco2_core.png)\n\n\n",
      "html": "<h1>SX4 - ASCII Protocol</h1>\n<h2>SXnet - Port</h2>\n<p>Es wird Port 4104 verwendet (und TCP/IP)</p>\n<h1>Befehlsübersicht</h1>\n<h2>reine SX Befehle</h2>\n<p>Über folgende ASCII Befehle werden SX-Bytes gesetzt und gelesen</p>\n<pre><code>S &lt;c&gt; &lt;d&gt;  - set an sx-channel &lt;c&gt; to value &lt;d&gt;  (&quot;S 44 12&quot; -&gt; result &quot;OK&quot;)\nSX &lt;c&gt; &lt;d&gt; = same as S &lt;c&gt; &lt;d&gt;\nR &lt;c&gt; - read a channel (&quot;R 44 -&gt; result  would be &quot;X 44 12)\n\nhierbei kann c die Werte von 1 bis 111 annehmen und d die Werte 0 bis 255 (8bit)\n</code></pre>\n<h2>erweiterte, SX Bit Befehle</h2>\n<p>Um unabhängig von der anderen Bits eines SX Kanals zB eine einzelne Weiche stellen\nzu können, gibt es die “Bit-Befehle” SET und GET, Beispiel:</p>\n<pre><code>SET 853 1 =&gt; Setze Bit 3 auf Adresse 85\nSET 853 0 =&gt; Clear Bit 3 auf Adresse 85\n(Bit sind hier die typischen SX-Bits, die von 1..8 numeriert sind)\n\nREAD 853  =&gt; gibt den Wert von Bit 3 auf Adresse 85 aus\n   response will be something like 'XL 853 1' (or ... 0)\n</code></pre>\n<h2>Gleisspannungs Befehle Ein/AUS</h2>\n<pre><code>SETPOWER 1  =&gt; track power on (SETPOWER 0 =&gt; track power off)\nREADPOWER   =&gt; lese den aktuellen &quot;Gleisspannungszustand&quot;\n                  Antwort:  &quot;XPOWER 1&quot; or &quot;XPOWER 0&quot;\n</code></pre>\n<p>zurück zum <a href=\"index.html\">Index</a></p>\n<h1>Licence</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0.en.html\">GPL v3.0</a></p>\n<p><img src=\"sx4_loco2_core.png\" alt=\"\"></p>\n",
      "id": 8
    }
  ]
}